name: CI/CD

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

env:
  REGISTRY: ghcr.io
  GO_IMAGE_NAME: go-api
  NODEJS_IMAGE_NAME: nodejs-api

jobs:
  build-go-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PKG_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.GO_IMAGE_NAME }}
          tags: latest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./services/go-api
          file: ./services/go-api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  build-nodejs-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PKG_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.NODEJS_IMAGE_NAME }}
          tags: latest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./services/express-api
          file: ./services/express-api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}